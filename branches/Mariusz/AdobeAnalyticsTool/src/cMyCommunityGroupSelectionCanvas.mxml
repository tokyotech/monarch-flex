<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="showCanvasHandler(event)" hide="hideCanvasHandler(event)" show="showCanvasHandler(event)" width="1013" height="615" backgroundColor="#FFFFFF" backgroundAlpha="0.1">
	
	<mx:Metadata>
		[Event(name="OpenCreateCommunityGroupCanvasEvent", type="flash.events.Event")]
		[Event(name="OpenCommunityGroupBrowserCanvasEvent", type="cCommGroupGraphicClickedEvent")]
		[Event(name="OpenCommunityGroupHomeCanvasEvent", type="flash.events.Event")]
	</mx:Metadata>
	
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.effects.Fade;
			import mx.effects.Move;
			import mx.effects.Tween;
			
			///////////////////////////////////////////////////////////////////////////////////
			//
			//							GUI EVENT HANDLERS
			//
			///////////////////////////////////////////////////////////////////////////////////
			
			/**
			 * 	Fires an event signaling that the user has clicked the create
			 *  community group label.
			 */
			private function createCommClickHandler(event:Event):void
			{
				var e:Event = new Event("OpenCreateCommunityGroupCanvasEvent");
				this.dispatchEvent(e);
			}
			
			/**
			 * 	Called when the user hovers the mouse over the create community group label.
			 */
			private function createCommRollOverHandler(event:Event):void
			{
				mCreateCommButton.setStyle("color", "0xFF6666");
			}
			
			/**
			 * 	Called when the user hovers the mouse away from the create community group label.
			 */
			private function createCommRollOutHandler(event:Event):void
			{
				mCreateCommButton.setStyle("color", "0xd8d8d8");
			}
			
			/**
			 * 	Fires an event signaling that the user has clicked the home label.
			 */
			private function homeLabelClickHandler(event:Event):void
			{
				var e:Event = new Event("OpenCommunityGroupHomeCanvasEvent");
				this.dispatchEvent(e);
			}
			
			/**
			 * 	Called when the user hovers the mouse over the home label.
			 */
			private function homeLabelRollOverHandler(event:Event):void
			{
				mHomeButton.setStyle("color", "0xFF6666");
			}
			
			/**
			 * 	Called when the user hovers the mouse away from the home label.
			 */
			private function homeLabelRollOutHandler(event:Event):void
			{
				mHomeButton.setStyle("color", "0x13bb33");
			}
			
			
			/**
			 *  Event handler called when the user clicks on the community group graphic whithin this canvas.
			 * 	Fires an event signaling that a community has been selected by the user.
			 */
			private function commGroupGraphicClickedHandler(event:cCommGroupGraphicClickedEvent):void
			{
				var i:int
				var communityGroupEntry:cCommunityGroupEntry;
				for(i = 0; i < mUserAccountInformation.mCommunities.length; i++) {
					communityGroupEntry = cCommunityGroupEntry(mUserAccountInformation.mCommunities.getItemAt(i));
					if(communityGroupEntry.mId == event.mCommGroupId) {
						var e:cCommGroupGraphicClickedEvent = new cCommGroupGraphicClickedEvent("OpenCommunityGroupBrowserCanvasEvent");
						e.mCommGroupName = event.mCommGroupName;
						e.mCommGroupId = event.mCommGroupId;
						e.mCreator = mUserAccountInformation.mUserName;
						e.mTime = event.mTime;
						e.mWebsites = communityGroupEntry.mWebsites;
						e.mKeywords = communityGroupEntry.mKeywords;
						this.dispatchEvent(e);
						return;
					}
				}
			}
			
			
			///////////////////////////////////////////////////////////////////////////////////
			//
			//							CANVAS EVENT HANDLERS
			//
			///////////////////////////////////////////////////////////////////////////////////
			
			/**
			 *  Event handler called when this canvas has been opened.
			 */
			private function showCanvasHandler(event:Event):void
			{		
				
			}
			
			/**
			 * 	Event handler called when this canvas closes.
			 */
			private function hideCanvasHandler(event:Event):void
			{
				if(!mRemoveCommGroupLabelEnabled) {
					mRemoveCommGroupLabelEnabled = true;
				}
			}
			
			
			///////////////////////////////////////////////////////////////////////////////////
			//
			//							 MEMBER FUNCTIONS
			//
			///////////////////////////////////////////////////////////////////////////////////
			
			/**
			 *  Function which updates the users information within this canvas component to be used
			 *  at a later time. Also displays the graphics for this canvas component.
			 */
			public function updateInformation(userAccountInformation:cAccountInformation):void
			{
				mUserAccountInformation = userAccountInformation;
				
				mMyCommVBox.removeAllChildren();
				
				var delay:int = 100;
				var i:int;
				var communityGroupEntry:cCommunityGroupEntry;
				for(i = 0; i < mUserAccountInformation.mCommunities.length; i++) {
					communityGroupEntry = cCommunityGroupEntry(mUserAccountInformation.mCommunities.getItemAt(i));
					var commGroupGraphicEntry:cCommGroupLargeGraphic = new cCommGroupLargeGraphic();
					commGroupGraphicEntry.addEventListener("cCommGroupGraphicClickedEvent", commGroupGraphicClickedHandler);
					var justCreated:Boolean = false;
					if(communityGroupEntry.mJustCreated) {
						justCreated = true;
						communityGroupEntry.mJustCreated = false;
					}
					commGroupGraphicEntry.updateInformation(communityGroupEntry.mName,
															mUserAccountInformation.mUserName,
															communityGroupEntry.mCreatedTime.toString(),
															communityGroupEntry.mWebsites.length.toString(),
															communityGroupEntry.mId,
															justCreated);								
					commGroupGraphicEntry.alpha = 0.3;					
					mMyCommVBox.addChild(commGroupGraphicEntry);
					// animate
					var fade:Fade = new Fade();
					fade.alphaFrom = 0.3;
					fade.alphaTo = 0.8;
					fade.duration = 500;
					fade.startDelay = delay;
					fade.target = commGroupGraphicEntry;
					fade.play();
					
					delay+=200;	
				}	
			}
			
			
			///////////////////////////////////////////////////////////////////////////////////
			//
			//							   DATA MEMBERS
			//
			///////////////////////////////////////////////////////////////////////////////////
			
			// reference to the users community group information object
			private var mUserAccountInformation:cAccountInformation = null;
			
			// variable used to enable and disable the remove website label
			private var mRemoveCommGroupLabelEnabled:Boolean = true;
			
		]]>
	</mx:Script>
	<mx:Label text="My Community Groups" fontFamily="Times New Roman" fontSize="24" textDecoration="normal" color="#BEBEBE" alpha="1.0" id="mHomeLoggedOutAccountLabel" horizontalCenter="-181" verticalCenter="-291" width="481"/>
	<mx:VBox height="513" width="390" id="mMyCommVBox" backgroundColor="#FFFFFF" backgroundAlpha="0.1" verticalScrollPolicy="off" x="312" y="62">
	</mx:VBox>
	<mx:Label text="Home &gt;&gt;" rollOver="homeLabelRollOverHandler(event)" rollOut="homeLabelRollOutHandler(event)" click="homeLabelClickHandler(event)" fontSize="14" color="#13BB33" horizontalCenter="-460" verticalCenter="-291" id="mHomeButton"/>
	<mx:Button label="Create Community Group" rollOver="createCommRollOverHandler(event)" rollOut="createCommRollOutHandler(event)" click="createCommClickHandler(event)" color="#D8D8D8" alpha="0.5" id="mCreateCommButton" verticalCenter="-292" horizontalCenter="412" fontWeight="bold"/>
	<mx:Button label="Next --&gt;" color="#D8D8D8" alpha="0.5" horizontalCenter="158" verticalCenter="286" id="mNextCommButton" fontWeight="bold" enabled="false"/>
	<mx:Button label="&lt;-- Previous" color="#D8D8D8" alpha="0.5" horizontalCenter="-146" verticalCenter="286" id="mPreviousCommButton" fontWeight="bold" enabled="false"/>
	<mx:HRule width="993" height="14.56" verticalCenter="-277" horizontalCenter="0" alpha="0.5"/>
	<mx:Button label="Newest" width="99" color="#D8D8D8" alpha="0.5" id="mNewestButton" fontWeight="bold" fontFamily="Verdana" horizontalCenter="-118" verticalCenter="-261"/>
	<mx:Button label="Most Viewed" width="99" color="#D8D8D8" alpha="0.5" id="mMostViewedButton" fontWeight="bold" horizontalCenter="0" verticalCenter="-261"/>
	<mx:Button label="Alphabetical" width="99" color="#D8D8D8" alpha="0.5" id="mAlphabeticalButton" fontWeight="bold" horizontalCenter="117" verticalCenter="-261"/>
	<mx:VRule height="20" horizontalCenter="-59" verticalCenter="-262"/>
	<mx:VRule height="20" horizontalCenter="58" verticalCenter="-262"/>
</mx:Canvas>
