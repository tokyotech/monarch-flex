<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="showCanvasHandler(event)" show="showCanvasHandler(event)" width="1013" height="625" backgroundAlpha="0.1" backgroundColor="#FFFFFF" xmlns:local="*">
	<mx:Metadata>
		[Event(name="CreateCommunityGroupEvent", type="cCreateCommunityGroupEvent")]
		[Event(name="RequestWebsiteStatsEvent", type="cWebsiteGraphicClickedEvent")]
	</mx:Metadata>
	
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
		
			///////////////////////////////////////////////////////////////////////////////////
			//
			//							GUI EVENT HANDLERS
			//
			///////////////////////////////////////////////////////////////////////////////////
		
			/**
			 * 	Function which switches the mMyCommViewStack index to 0 (home).
			 */
			private function createCommBackLabelClickedHandler(event:Event):void
			{
				mMyCommViewStack.selectedIndex = 0;
			}
			
			/**
			 * Function which switches the mMyCommViewStack index to 3 (website browser).
			 */
			private function WebsiteBrowserBackClickedHandler(event:Event):void
			{
				mMyCommViewStack.selectedIndex = 2;
			}
			
			/**
			 * 	Detects a request to create a community group. It will fire an event to notify
			 * 	that a community group should be created.
			 */
			private function createCommunityGroupHandler(event:cCreateCommunityGroupEvent):void
			{
				var e:cCreateCommunityGroupEvent = new cCreateCommunityGroupEvent("CreateCommunityGroupEvent");
				e.mCommName = event.mCommName;
				e.mKeywords = event.mKeywords;
				this.dispatchEvent(e);
			}
			
		
			///////////////////////////////////////////////////////////////////////////////////
			//
			//						   CANVAS EVENT HANDLERS
			//
			///////////////////////////////////////////////////////////////////////////////////
			
			/**
			 * 	Detects a create community groups request from cMyCommHomeCanvas and
			 *  opens the create community group canvas.
			 */
			private function openCreateCommGroupCanvasHandler(event:Event):void
			{
				mMyCommViewStack.selectedIndex = 1;
			}
			
			/**
			 * 	Detects request to view a particular community group and launches the community
			 *  group browser canvas.
			 */
			private function openCommunityGroupBrowserCanvasHandler(event:cCommGroupGraphicClickedEvent):void
			{
				mMyCommViewStack.selectedIndex = 2;
				mCommunityGroupBrowserCanvas.updateInformation(event.mCommGroupName,
															   event.mCommGroupId,
															   event.mCreator,
															   "",
															   event.mWebsites);
			}
			
			/**
			 *	Detects request to view particular website statistics and fires a request to the engine.
			 */
			private function openWebsiteStatBrowserCanvasHandler(event:cWebsiteGraphicClickedEvent):void
			{
				var e:cWebsiteGraphicClickedEvent = new cWebsiteGraphicClickedEvent("RequestWebsiteStatsEvent");
				e.mWebsiteName = event.mWebsiteName;
				e.mCommGroupId = event.mCommGroupId;
				
				mWebsiteSelectedName = e.mWebsiteName;
				mWebsiteSelectedURL = e.mWebsiteURL;
				mWebsiteSelectedType = e.mWebsiteType;
				
				this.dispatchEvent(e);
			}
			
			/**
			 *	Function which gets called each time this canvas is selected by the parent. It
			 * 	will select the cMyCommHomeCanvas as the default canvas within this component and
			 *  update its internal user information.
			 */
			private function showCanvasHandler(event:Event):void
			{					
				mMyCommHomeCanvas.updateInformation(mUserAccountInformation);				
				mMyCommViewStack.selectedIndex = 0;
			}
			
			
			///////////////////////////////////////////////////////////////////////////////////
			//
			//						   MEMBER FUNCTIONS
			//
			///////////////////////////////////////////////////////////////////////////////////
			
			/**
			 * 	Function which updates the users information within this canvas component to be used
			 *  at a later time.
			 */
			public function updateInformation(userAccountInformation:cAccountInformation):void
			{
				mUserAccountInformation = userAccountInformation;	
			}
			
			/**
			 * 	Selects the website statistics browser canvas within the mMyCommViewStack.
			 */
			public function openWebsiteStatsBrowserCanvas(analyticsParser:cAnalyticsParser):void
			{
				mMyCommViewStack.selectedIndex = 3;
				mWebsiteStatsBrowserCanvas.updateInformation(analyticsParser,
															 mWebsiteSelectedName,
															 mWebsiteSelectedURL,
															 mWebsiteSelectedType);
			}
			
			/**
			 *  Selects the my community home canvas within the mMyCommViewStack.
			 *  Function used when this canvas has been selected in the past by
			 * 	mMyCommViewStack must be altered.
			 */
			public function openMyCommHomeCanvas():void
			{
				if(mMyCommViewStack != null) {
					mMyCommViewStack.selectedIndex = 0;
				}
			}
			
			
			///////////////////////////////////////////////////////////////////////////////////
			//
			//						   DATA MEMBERS
			//
			///////////////////////////////////////////////////////////////////////////////////
			
			// reference to the users community group information object
			private var mUserAccountInformation:cAccountInformation = null;
			
			// selected website information (temporary - changes each time a website is selected)
			private var mWebsiteSelectedName:String = "";
			private var mWebsiteSelectedURL:String = "";
			private var mWebsiteSelectedType:String = "";
				
		]]>
	</mx:Script>
	
	<mx:HRule x="0" y="33" width="1013" height="7" strokeColor="#606060" id="mHRule1"/>
	<mx:ViewStack x="0" y="40" id="mNavigatorViewStack" width="1013" height="585">
		<mx:ViewStack id="mMyCommViewStack" label="My Community Groups" width="1013" height="585">
			<local:cMyCommHomeCanvas id="mMyCommHomeCanvas" show="showCanvasHandler(event)" OpenCommunityGroupBrowserCanvasEvent="openCommunityGroupBrowserCanvasHandler(event)" OpenCreateCommunityGroupCanvasEvent="openCreateCommGroupCanvasHandler(event)" label="My Community Groups" height="577" width="1012">
			</local:cMyCommHomeCanvas>
			<local:cCreateCommunityGroupCanvas id="mCreateCommunityGroupCanvas" CreateCommunityGroupEvent="createCommunityGroupHandler(event)" BackLabelClickedEvent="createCommBackLabelClickedHandler(event)" height="577" width="1003">
			</local:cCreateCommunityGroupCanvas>
			<local:cCommunityGroupBrowserCanvas id="mCommunityGroupBrowserCanvas" OpenWebsiteStatBrowserCanvasEvent="openWebsiteStatBrowserCanvasHandler(event)" BackLabelClickedEvent="createCommBackLabelClickedHandler(event)">
			</local:cCommunityGroupBrowserCanvas>
			<local:cWebsiteStatsBrowserCanvas id="mWebsiteStatsBrowserCanvas" BackLabelClickedEvent="WebsiteBrowserBackClickedHandler(event)">
			</local:cWebsiteStatsBrowserCanvas>
		</mx:ViewStack>
		<mx:ViewStack id="mAllCommViewStack" label="All Community Groups" width="1013" height="585">
			<mx:Canvas label="All Community Groups" width="100%" height="100%" backgroundColor="#00D8FF">
			</mx:Canvas>
		</mx:ViewStack>
	</mx:ViewStack>
	<mx:ButtonBar x="354" y="10" dataProvider="mNavigatorViewStack" color="#D7D7D7">
	</mx:ButtonBar>
</mx:Canvas>
