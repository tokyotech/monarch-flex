<?xml version="1.0" encoding="utf-8"?>
<mx:Window xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="creationCompleteHandler(event)" layout="absolute" close="closingHandler(event)" width="376" height="206" showStatusBar="false" showTitleBar="false" showInAutomationHierarchy="false" showGripper="false" minHeight="206" minWidth="376" maxHeight="206" maxWidth="376">
	<mx:Metadata>
		[Event(name="createAccountEvent", type="cCreateAccountEvent")]
	</mx:Metadata>
	
	<mx:Script>
		<![CDATA[
			
			import mx.controls.Alert;
			
			///////////////////////////////////////////////////////////////////////////////////
			//
			//								EVENT HANDLERS
			//
			///////////////////////////////////////////////////////////////////////////////////
			
			/**
			 * 	Event handler which is triggered by the user clicking the Create
			 * 	Account button.
			 */
			private function createAccountClickHandler(event:Event):void
			{
				createAccountProcess();
			}
			
			/**
			 * 	Event handler which is triggered by the user clicking the Cancel button.
			 */
			private function cancelClickHandler(event:Event):void
			{
				cancelProcess();
			}
			
			/**
			 *  Event handler triggered when the user clicks the ENTER keyboard
			 *  button while the cursor lies within the full name text box.
			 */
			private function fullNameKeyDownHandler(event:KeyboardEvent):void
			{
				if(event.keyCode == Keyboard.ENTER) {
					createAccountProcess();
				}
			}
			
			/**
			 *  Event handler triggered when the user clicks the ENTER keyboard
			 *  button while the cursor lies within the user name text box.
			 */
			private function userNameKeyDownHandler(event:KeyboardEvent):void
			{
				if(event.keyCode == Keyboard.ENTER) {
					createAccountProcess();
				}
			}
			
			/**
			 *  Event handler triggered when the user clicks the ENTER keyboard
			 *  button while the cursor lies within the password text box.
			 */
			private function passwordKeyDownHandler(event:KeyboardEvent):void
			{
				if(event.keyCode == Keyboard.ENTER) {
					createAccountProcess();
				}
			}
			
			/**
			 * Event handler triggered when the user clicks the ENTER keyboard
			 *  button while the cursor lies within the re-enter password text box.
			 */
			private function reEnterPasswordKeyDownHandler(event:KeyboardEvent):void
			{
				if(event.keyCode == Keyboard.ENTER) {
					createAccountProcess();
				}
			}
			
			/**
			 * 	Event handler triggered when the window is about to close.
			 */
			private function closingHandler(event:Event):void
			{
				cancelProcess();
			}
			
			/**
			 * 	Event handler called when the window is first created.
			 */
			private function creationCompleteHandler(event:Event):void
			{
				mFullNameTextBox.setFocus();
			}
			
			
			///////////////////////////////////////////////////////////////////////////////////
			//
			//								MEMBER FUNCTIONS
			//
			///////////////////////////////////////////////////////////////////////////////////
			
			/**
			 * 	Function which handles the processing of a create account event.
			 */
			private function createAccountProcess():void
			{
				if(mFullNameTextBox.text.length == 0 ||
				   mEmailTextBox.text.length == 0 ||
				   mPasswordTextBox.text.length == 0 ||
				   mReEnterPasswordTextBox.text.length == 0)
				{
					Alert.show("Please fill in all fields before proceeding.", "Error", 1, this);
					return;
				}	
				
				if(mPasswordTextBox.text != mReEnterPasswordTextBox.text)
				{
					Alert.show("The passwords entered don't match.", "Error", 1, this);
					return;
				}
				
				var e:cCreateAccountEvent = new cCreateAccountEvent("cCreateAccountEvent");
				e.mType = e.CREATE_ACCOUNT;
				e.mFullName = mFullNameTextBox.text;
				e.mEmail = mEmailTextBox.text;
				e.mPassword = mPasswordTextBox.text;
				this.dispatchEvent(e);
				this.close();
			}
			
			/**
			 * 	Function which handles the processing of a cancel event.
			 */
			private function cancelProcess():void
			{
				var e:cCreateAccountEvent = new cCreateAccountEvent("cCreateAccountEvent");
				e.mType = e.CANCEL;
				this.dispatchEvent(e);
				this.close();
			}
			
		]]>
	</mx:Script>
	
	<mx:Label x="117.5" y="10" text="Create Account" id="mCreateAccountLabel" styleName="pageTitle" />
	<mx:Label x="59" y="50" text="Full Name :" />
	<mx:Label x="84" y="76" text="Email :" />
	<mx:Label x="65" y="102" text="Password :" />
	<mx:Label x="15" y="128" text="Re-enter Password :" />
	<mx:TextInput width="224.5" keyDown="fullNameKeyDownHandler(event)" id="mFullNameTextBox" x="136" y="48" toolTip="Your full name"/>
	<mx:TextInput width="224.5" keyDown="userNameKeyDownHandler(event)" id="mEmailTextBox" x="136" y="74" toolTip="The user name used for logging in"/>
	<mx:TextInput width="224.5" keyDown="passwordKeyDownHandler(event)" id="mPasswordTextBox" x="136" y="100" displayAsPassword="true" toolTip="The password used for logging in"/>
	<mx:TextInput width="224.5" keyDown="reEnterPasswordKeyDownHandler(event)" id="mReEnterPasswordTextBox" x="136" y="126" displayAsPassword="true" toolTip="Re-enter the password"/>
	<mx:Button x="256.5" y="156" click="createAccountClickHandler(event)" id="cCreateAccountButton" label="Create Account" />
	<mx:Button x="185.5" y="156" click="cancelClickHandler(event)" id="mCancelButton" label="Cancel" />
</mx:Window>
